{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { InputLabel, TextField, Box, Button } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    handleSubmit\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validationSchema: Yup.object().shape({\n        username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n        password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n      }),\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            className: classes.label,\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"username\",\n            name: \"username\",\n            error: Boolean(errors.username),\n            helperText: errors.username,\n            value: values.username,\n            onChange: handleChange,\n            InputLabelProps: {\n              shrink: true\n            },\n            InputProps: {\n              classes: {\n                input: classes.inputs\n              },\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            className: classes.label,\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            error: Boolean(errors.password),\n            helperText: errors.password,\n            value: values.password,\n            onChange: handleChange,\n            InputLabelProps: {\n              shrink: true\n            },\n            InputProps: {\n              classes: {\n                input: classes.inputs\n              },\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              alignText: \"center\",\n              children: \"sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/LoginForm.tsx"],"names":["Formik","Yup","InputLabel","TextField","Box","Button","useStyles","LoginForm","handleSubmit","classes","username","password","object","shape","string","required","min","handleChange","values","touched","errors","form","label","Boolean","shrink","input","inputs","disableUnderline"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CircularProgress, InputLabel, TextField, Box, Button } from '@material-ui/core';\nimport useStyles from './useStyles';\n\ninterface Props {\n    handleSubmit: () => void;\n}\n\nfunction LoginForm ({ handleSubmit }: Props): JSX.Element { \n    const classes = useStyles();\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n                    password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n                })}\n                onSubmit={handleSubmit}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors }) => (\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                <InputLabel className={classes.label}>\n                username\n                </InputLabel>\n                <TextField\n                    id='username'\n                    name='username'\n                    error={Boolean(errors.username)}\n                    helperText={errors.username}\n                    value={values.username}\n                    onChange={handleChange}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    InputProps={{\n                        classes: { input: classes.inputs },\n                        disableUnderline: true\n                    }}\n\n                />\n                <InputLabel className={classes.label}>\n                password\n                </InputLabel>\n                <TextField\n                    id='password'\n                    name='password'\n                    error={Boolean(errors.password)}\n                    helperText={errors.password}\n                    value={values.password}\n                    onChange={handleChange}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    InputProps={{\n                        classes: { input: classes.inputs },\n                        disableUnderline: true\n                    }}\n                />\n                <Box>\n                    <Button alignText='center'>\n                        sign in \n                    </Button>\n                </Box> \n                </form>\n                )}   \n            </Formik>\n        </>\n    )\n}\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}